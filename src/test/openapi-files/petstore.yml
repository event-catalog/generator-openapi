openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Petstore
  description: This is a sample server Petstore server.
  license:
    name: MIT
externalDocs:
  url: http://swagger.io
  description: Find out more about Swagger
tags:
  - name: Pets
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      x-eventcatalog-message-type: query # This is a query operation
      x-eventcatalog-message-name: List Pets # Name used in EventCatalog
      x-eventcatalog-message-id: list-pets # ID value used in EventCatalog
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      x-eventcatalog-message-type: command # This is a command operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      x-eventcatalog-message-type: query # This is a query operation
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}/adopted:
    post:
      summary: Notify that a pet has been adopted
      operationId: petAdopted
      tags:
        - pets
      x-eventcatalog-message-type: event # This is an event operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Adoption'
        required: true
      responses:
        '200':
          description: Notification that the pet has been adopted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}/vaccinated:
    post:
      summary: Notify that a pet has been vaccinated
      operationId: petVaccinated
      tags:
        - pets
      x-eventcatalog-message-action: sends # This is a sends operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaccination'
        required: true
      responses:
        '200':
          description: Notification that the pet has been vaccinated successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: '#/components/schemas/Pet'
    Adoption:
      type: object
      required:
        - petId
        - adopterName
      properties:
        petId:
          type: integer
          format: int64
        adopterName:
          type: string
          description: Name of the person who adopted the pet
    Vaccination:
      type: object
      required:
        - petId
        - vaccine
      properties:
        petId:
          type: integer
          format: int64
        vaccine:
          type: string
          description: Name of the vaccine administered
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
